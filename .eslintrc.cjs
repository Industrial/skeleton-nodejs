const javascriptConfiguration = {
  files: ['**/*.{js,mjs,cjs}'],
  plugins: ['simple-import-sort', '@stylistic/eslint-plugin-js'],
  extends: ['plugin:import/errors', 'plugin:import/warnings'],
  env: {
    node: true,
    es2021: true,
    browser: true,
    jest: false,
  },
  parserOptions: {
    ecmaFeatures: {
      impliedStrict: true,
    },
  },
  rules: {
    // Logic Errors
    'array-callback-return': ['error'],
    'constructor-super': ['error'],
    'for-direction': ['error'],
    'getter-return': ['error'],
    'no-async-promise-executor': ['error'],
    'no-await-in-loop': ['off'],
    'no-class-assign': ['error'],
    'no-compare-neg-zero': ['error'],
    'no-cond-assign': ['error'],
    'no-const-assign': ['error'],
    'no-constant-binary-expression': ['error'],
    'no-constant-condition': ['error'],
    'no-constructor-return': ['error'],
    'no-control-regex': ['error'],
    'no-debugger': ['error'],
    'no-dupe-args': ['error'],
    'no-dupe-class-members': ['error'],
    'no-dupe-else-if': ['error'],
    'no-dupe-keys': ['error'],
    'no-duplicate-case': ['error'],
    'no-duplicate-imports': ['error'],
    'no-empty-character-class': ['error'],
    'no-empty-pattern': ['error'],
    'no-ex-assign': ['error'],
    'no-fallthrough': ['error'],
    'no-func-assign': ['error'],
    'no-import-assign': ['error'],
    'no-inner-declarations': ['error'],
    'no-invalid-regexp': ['error'],
    'no-irregular-whitespace': ['error'],
    'no-loss-of-precision': ['error'],
    'no-misleading-character-class': ['error'],
    'no-new-symbol': ['error'],
    'no-obj-calls': ['error'],
    'no-promise-executor-return': ['error'],
    'no-prototype-builtins': ['error'],
    'no-self-assign': ['error'],
    'no-self-compare': ['error'],
    'no-setter-return': ['error'],
    'no-sparse-arrays': ['error'],
    'no-template-curly-in-string': ['error'],
    'no-this-before-super': ['error'],
    'no-undef': ['error'],
    'no-unexpected-multiline': ['error'],
    'no-unmodified-loop-condition': ['error'],
    'no-unreachable': ['error'],
    'no-unreachable-loop': ['error'],
    'no-unsafe-finally': ['error'],
    'no-unsafe-negation': ['error'],
    'no-unsafe-optional-chaining': ['error'],
    'no-unused-private-class-members': ['off'],
    'no-unused-vars': [
      'warn',
      {
        args: 'after-used',
        argsIgnorePattern: '^_',
      },
    ],
    'no-use-before-define': ['error'],
    'no-useless-backreference': ['error'],
    'require-atomic-updates': ['error'],
    'use-isnan': ['error'],
    'valid-typeof': ['error'],

    // Suggestions
    'accessor-pairs': ['error'],
    'arrow-body-style': [
      'error',
      'as-needed',
      { requireReturnForObjectLiteral: true },
    ],
    'block-scoped-var': ['error'],
    camelcase: ['error'],
    'capitalized-comments': ['off'],
    'class-methods-use-this': ['off'],
    complexity: ['off'],
    'consistent-return': ['error'],
    'consistent-this': ['error', 'self'],
    curly: ['error', 'all'],
    'default-case': ['error'],
    'default-case-last': ['error'],
    'default-param-last': ['error'],
    'dot-notation': ['error'],
    eqeqeq: ['error', 'always'],
    'func-name-matching': ['error'],
    'func-names': ['error', 'as-needed'],
    'func-style': ['error', 'expression'],
    'grouped-accessor-pairs': ['error'],
    'guard-for-in': ['off'],
    'id-denylist': ['off'],
    'id-length': ['off'],
    'id-match': ['error'],
    'init-declarations': ['off'],
    'logical-assignment-operators': [
      'error',
      'always',
      {
        enforceForIfStatements: true,
      },
    ],
    'max-classes-per-file': ['off'],
    'max-depth': ['off'],
    'max-lines': ['off'],
    'max-lines-per-function': ['off'],
    'max-nested-callbacks': ['off'],
    'max-params': ['off'],
    'max-statements': ['off'],
    'multiline-comment-style': ['off'],
    'new-cap': ['off'],
    'no-alert': ['error'],
    'no-array-constructor': ['error'],
    'no-bitwise': ['error'],
    'no-caller': ['error'],
    'no-case-declarations': ['error'],
    'no-confusing-arrow': ['off'],
    'no-console': ['off'],
    'no-continue': ['off'],
    'no-delete-var': ['error'],
    'no-div-regex': ['error'],
    'no-else-return': ['error'],
    'no-empty': ['error'],
    'no-empty-function': ['off'],
    'no-empty-static-block': ['error'],
    'no-eq-null': ['error'],
    'no-eval': ['error'],
    'no-extend-native': ['error'],
    'no-extra-bind': ['error'],
    'no-extra-boolean-cast': ['error'],
    'no-extra-label': ['error'],
    'no-extra-semi': ['off'],
    'no-floating-decimal': ['error'],
    'no-global-assign': ['error'],
    'no-implicit-coercion': ['error'],
    'no-implicit-globals': ['error'],
    'no-implied-eval': ['error'],
    'no-inline-comments': ['error'],
    'no-invalid-this': ['error'],
    'no-iterator': ['error'],
    'no-label-var': ['error'],
    'no-labels': ['error'],
    'no-lone-blocks': ['error'],
    'no-lonely-if': ['error'],
    'no-loop-func': ['error'],
    'no-magic-numbers': ['off'],
    'no-mixed-operators': ['off'],
    'no-multi-assign': ['error'],
    'no-multi-str': ['error'],
    'no-negated-condition': ['off'],
    'no-nested-ternary': ['off'],
    'no-new': ['warn'],
    'no-new-func': ['error'],
    'no-new-object': ['error'],
    'no-new-wrappers': ['error'],
    'no-nonoctal-decimal-escape': ['error'],
    'no-octal': ['error'],
    'no-octal-escape': ['error'],
    'no-param-reassign': ['error'],
    'no-plusplus': ['error'],
    'no-proto': ['error'],
    'no-redeclare': ['error'],
    'no-restricted-exports': ['error'],
    'no-restricted-globals': ['error'],
    'no-restricted-imports': ['error'],
    'no-restricted-properties': ['error'],
    'no-restricted-syntax': ['error'],
    'no-return-assign': ['error'],
    'no-return-await': ['off'],
    'no-script-url': ['error'],
    'no-sequences': ['error'],
    'no-shadow': ['error'],
    'no-shadow-restricted-names': ['error'],
    'no-ternary': ['off'],
    'no-throw-literal': ['error'],
    'no-undef-init': ['error'],
    'no-undefined': ['off'],
    'no-underscore-dangle': ['error'],
    'no-unneeded-ternary': ['error'],
    'no-unused-expressions': ['error'],
    'no-unused-labels': ['error'],
    'no-useless-call': ['error'],
    'no-useless-catch': ['error'],
    'no-useless-computed-key': ['error'],
    'no-useless-concat': ['error'],
    'no-useless-constructor': ['error'],
    'no-useless-escape': ['error'],
    'no-useless-rename': ['error'],
    'no-useless-return': ['error'],
    'no-var': ['error'],
    'no-void': ['error'],
    'no-warning-comments': ['off'],
    'no-with': ['error'],
    'object-shorthand': ['error', 'always'],
    'one-var': ['error', 'never'],
    'one-var-declaration-per-line': ['error'],
    'operator-assignment': ['error', 'always'],
    'prefer-arrow-callback': ['error'],
    'prefer-const': ['error'],
    'prefer-destructuring': ['error'],
    'prefer-numeric-literals': ['error'],
    'prefer-promise-reject-errors': ['error'],
    'prefer-regex-literals': ['warn'],
    'prefer-rest-params': ['error'],
    'prefer-spread': ['error'],
    'prefer-template': ['error'],
    'quote-props': ['error', 'as-needed'],
    radix: ['error', 'always'],
    'require-await': ['off'],
    'require-unicode-regexp': ['error'],
    'require-yield': ['off'],
    'sort-imports': ['off'],
    'sort-keys': ['off'],
    'sort-vars': ['off'],
    'spaced-comment': ['off'],
    strict: ['off'],
    'symbol-description': ['error'],
    'vars-on-top': ['off'],
    yoda: ['error', 'never'],

    // Style
    '@stylistic/js/array-bracket-newline': ['off'],
    '@stylistic/js/array-bracket-spacing': ['error', 'never'],
    '@stylistic/js/array-element-newline': ['off'],
    '@stylistic/js/arrow-parens': ['error', 'always'],
    '@stylistic/js/arrow-spacing': ['error'],
    '@stylistic/js/block-spacing': ['error', 'always'],
    '@stylistic/js/brace-style': ['error', '1tbs'],
    '@stylistic/js/comma-dangle': ['error', 'always-multiline'],
    '@stylistic/js/comma-spacing': ['error'],
    '@stylistic/js/comma-style': ['error', 'last'],
    '@stylistic/js/computed-property-spacing': ['error', 'never'],
    '@stylistic/js/dot-location': ['error', 'property'],
    '@stylistic/js/eol-last': ['error', 'always'],
    '@stylistic/js/function-call-argument-newline': ['error', 'consistent'],
    '@stylistic/js/function-call-spacing': ['error', 'never'],
    '@stylistic/js/function-paren-newline': ['error', 'multiline'],
    '@stylistic/js/generator-star-spacing': ['error', { before: true, after: false }],
    '@stylistic/js/implicit-arrow-linebreak': ['error', 'below'],
    '@stylistic/js/indent': ['error', 2],
    '@stylistic/js/jsx-quotes': ['error', 'prefer-double'],
    '@stylistic/js/key-spacing': ['error'],
    '@stylistic/js/keyword-spacing': ['error'],
    // '@stylistic/js/line-comment-position': ['error', { position: 'above' }],
    '@stylistic/js/linebreak-style': ['error', 'unix'],
    '@stylistic/js/lines-around-comment': ['off'],
    '@stylistic/js/lines-between-class-members': ['error', 'always'],
    '@stylistic/js/max-len': ['error', { code: 130, ignoreTemplateLiterals: true, ignoreStrings: true }],
    '@stylistic/js/max-statements-per-line': ['error', { max: 1 }],
    '@stylistic/js/multiline-ternary': ['off'],
    '@stylistic/js/new-parens': ['error'],
    '@stylistic/js/newline-per-chained-call': ['off'],
    '@stylistic/js/no-extra-parens': ['off'],
    '@stylistic/js/no-mixed-spaces-and-tabs': ['error'],
    '@stylistic/js/no-multi-spaces': ['error'],
    '@stylistic/js/no-multiple-empty-lines': ['error', { max: 1 }],
    '@stylistic/js/no-tabs': ['error'],
    '@stylistic/js/no-trailing-spaces': ['error'],
    '@stylistic/js/no-whitespace-before-property': ['error'],
    '@stylistic/js/nonblock-statement-body-position': ['error', 'below'],
    '@stylistic/js/object-curly-newline': ['off'],
    '@stylistic/js/object-curly-spacing': ['error', 'always'],
    '@stylistic/js/object-property-newline': ['off'],
    '@stylistic/js/operator-linebreak': ['off'],
    '@stylistic/js/padded-blocks': ['error', 'never'],
    '@stylistic/js/padding-line-between-statements': ['off'],
    '@stylistic/js/quotes': ['error', 'single', { avoidEscape: true, allowTemplateLiterals: true }],
    '@stylistic/js/rest-spread-spacing': ['error', 'never'],
    '@stylistic/js/semi': ['error', 'never'],
    '@stylistic/js/semi-spacing': ['error'],
    '@stylistic/js/semi-style': ['error', 'last'],
    '@stylistic/js/space-before-blocks': ['error', 'always'],
    '@stylistic/js/space-before-function-paren': ['off'],
    '@stylistic/js/space-in-parens': ['error', 'never'],
    '@stylistic/js/space-infix-ops': ['error'],
    '@stylistic/js/space-unary-ops': ['error'],
    '@stylistic/js/switch-colon-spacing': ['error'],
    '@stylistic/js/template-curly-spacing': ['error', 'never'],
    '@stylistic/js/template-tag-spacing': ['error', 'never'],
    // '@stylistic/js/unicode-bom': ['error', 'never'],
    '@stylistic/js/wrap-iife': ['error'],
    '@stylistic/js/wrap-regex': ['off'],
    '@stylistic/js/yield-star-spacing': ['error', 'after'],
    // '@stylistic/indent-binary-ops': ['error', 2],

    // Plugins
    'import/extensions': 'off',
    'import/no-cycle': ['off'],
    'import/no-dynamic-require': ['off'],
    'import/no-extraneous-dependencies': ['off'],
    'import/no-import-module-exports': 'off',
    'import/no-unresolved': 'off',
    'import/prefer-default-export': 'off',
    'simple-import-sort/exports': ['error'],
    'simple-import-sort/imports': ['error'],
  },
}

const reactConfiguration = {
  plugins: ['react'],
  rules: {
    'react-hooks/exhaustive-deps': 'off',
    'react-hooks/rules-of-hooks': 'off',
    'react/destructuring-assignment': 'warn',
    'react/display-name': 'off',
    'react/forbid-prop-types': 'warn',
    'react/function-component-definition': ['error', { namedComponents: 'function-declaration', unnamedComponents: 'arrow-function' }],
    'react/jsx-filename-extension': ['warn', { extensions: ['.js', '.jsx', '.ts', '.tsx'] }],
    'react/jsx-key': 'warn',
    'react/jsx-no-constructed-context-values': 'warn',
    'react/jsx-no-target-blank': 'off',
    'react/jsx-no-useless-fragment': 'warn',
    'react/jsx-one-expression-per-line': 'off',
    'react/jsx-props-no-spreading': ['off', { html: 'ignore' }],
    'react/jsx-wrap-multilines': ['off'],
    'react/no-array-index-key': 'warn',
    'react/no-unstable-nested-components': 'warn',
    'react/no-unused-class-component-methods': 'warn',
    'react/no-unused-prop-types': ['off'],
    'react/prefer-stateless-function': ['warn', { ignorePureComponents: false }],
    'react/prop-types': ['off'],
    'react/require-default-props': ['off'],

    // Style
    '@stylistic/jsx/jsx-child-element-spacing': ['error'],
    '@stylistic/jsx/jsx-closing-bracket-location': ['error', 'line-aligned'],
    '@stylistic/jsx/jsx-closing-tag-location': ['error'],
    '@stylistic/jsx/jsx-curly-brace-presence': ['error', { props: 'never', children: 'never' }],
    '@stylistic/jsx/jsx-curly-newline': ['error', { multiline: 'forbid', singleline: 'forbid' }],
    '@stylistic/jsx/jsx-curly-spacing': ['error', { when: 'never', children: true }],
    '@stylistic/jsx/jsx-equals-spacing': ['error', { before: 'never', after: 'never' }],
    '@stylistic/jsx/jsx-first-prop-new-line': ['error', 'multiline'],
    '@stylistic/jsx/jsx-indent': ['error', 2],
    '@stylistic/jsx/jsx-indent-props': ['error', 2],
    '@stylistic/jsx/jsx-max-props-per-line': ['off'],
    '@stylistic/jsx/jsx-newline': ['off'],
    '@stylistic/jsx/jsx-one-expression-per-line': ['error'],
    '@stylistic/jsx/jsx-pascal-case': ['error'],
    '@stylistic/jsx/jsx-props-no-multi-spaces': ['error'],
    '@stylistic/jsx/jsx-self-closing-comp': ['error'],
    '@stylistic/jsx/jsx-sort-props': ['error'],
    '@stylistic/jsx/jsx-tag-spacing': ['error', { closingSlash: 'never', beforeSelfClosing: 'always', afterOpening: 'never', beforeClosing: 'proportional-always' }],
    '@stylistic/jsx/jsx-wrap-multilines': ['error', { declaration: 'parens-new-line', assignment: 'parens-new-line', return: 'parens-new-line', arrow: 'parens-new-line', condition: 'parens-new-line', logical: 'parens-new-line', prop: 'parens-new-line' }],
  },
  globals: {
    JSX: 'readonly',
  },
}

const jsxConfiguration = {
  ...javascriptConfiguration,

  files: ['**/*.{jsx}'],
  plugins: [...javascriptConfiguration.plugins, ...reactConfiguration.plugins],

  parserOptions: {
    ...javascriptConfiguration?.parserOptions,
    ecmaFeatures: {
      ...javascriptConfiguration.parserOptions?.ecmaFeatures,
      jsx: true,
    },
  },

  rules: {
    ...javascriptConfiguration.rules,
    'arrow-body-style': ['error', 'always'],

    ...reactConfiguration.rules,
  },

  globals: {
    ...reactConfiguration.globals,
  },
}

const typescriptConfiguration = {
  ...javascriptConfiguration,

  files: ['**/*.ts'],
  parser: '@typescript-eslint/parser',
  plugins: [...javascriptConfiguration.plugins, '@typescript-eslint'],
  extends: [
    'plugin:import/errors',
    'plugin:import/warnings',
    // 'plugin:@typescript-eslint/recommended',
  ],
  parserOptions: {
    project: [`./tsconfig.json`],
    sourceType: 'module',
    ecmaVersion: 2020,
  },
  rules: {
    ...javascriptConfiguration.rules,

    // Rules
    '@typescript-eslint/adjacent-overload-signatures': ['error'],
    '@typescript-eslint/array-type': ['error', { default: 'generic', readonly: 'generic' }],
    '@typescript-eslint/await-thenable': ['error'],
    '@typescript-eslint/ban-ts-comment': ['error'],
    '@typescript-eslint/ban-tslint-comment': ['error'],
    '@typescript-eslint/ban-types': ['error'],
    '@typescript-eslint/class-literal-property-style': ['error', 'fields'],
    '@typescript-eslint/consistent-generic-constructors': ['error'],
    '@typescript-eslint/consistent-indexed-object-style': ['error'],
    '@typescript-eslint/consistent-type-assertions': [
      'error',
      { assertionStyle: 'as', objectLiteralTypeAssertions: 'allow-as-parameter' },
    ],
    '@typescript-eslint/consistent-type-definitions': ['error', 'type'],
    '@typescript-eslint/consistent-type-exports': ['error'],
    '@typescript-eslint/consistent-type-imports': ['off'],
    '@typescript-eslint/explicit-member-accessibility': [
      'error',
      {
        accessibility: 'explicit',
      },
    ],
    '@typescript-eslint/explicit-module-boundary-types': ['error'],
    '@typescript-eslint/member-ordering': ['error'],
    '@typescript-eslint/method-signature-style': ['error'],
    '@typescript-eslint/naming-convention': ['off'],
    '@typescript-eslint/no-base-to-string': ['error'],
    '@typescript-eslint/no-confusing-non-null-assertion': ['error'],
    '@typescript-eslint/no-confusing-void-expression': ['error'],
    '@typescript-eslint/no-duplicate-enum-values': ['error'],
    '@typescript-eslint/no-dynamic-delete': ['error'],
    '@typescript-eslint/no-empty-interface': ['warn'],
    '@typescript-eslint/no-explicit-any': ['error'],
    '@typescript-eslint/no-extra-non-null-assertion': ['error'],
    '@typescript-eslint/no-extraneous-class': ['warn'],
    '@typescript-eslint/no-floating-promises': ['error'],
    '@typescript-eslint/no-for-in-array': ['error'],
    '@typescript-eslint/no-inferrable-types': ['error'],
    '@typescript-eslint/no-invalid-void-type': ['error'],
    '@typescript-eslint/no-meaningless-void-operator': ['error'],
    '@typescript-eslint/no-misused-new': ['error'],
    '@typescript-eslint/no-misused-promises': ['off'],
    '@typescript-eslint/no-namespace': ['error'],
    '@typescript-eslint/no-non-null-asserted-nullish-coalescing': ['error'],
    '@typescript-eslint/no-non-null-asserted-optional-chain': ['error'],
    '@typescript-eslint/no-non-null-assertion': ['error'],
    '@typescript-eslint/no-redundant-type-constituents': ['error'],
    '@typescript-eslint/no-require-imports': ['error'],
    '@typescript-eslint/no-this-alias': ['error'],
    '@typescript-eslint/no-type-alias': ['off'],
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': ['off'],
    '@typescript-eslint/no-unnecessary-condition': ['warn'],
    '@typescript-eslint/no-unnecessary-qualifier': ['warn'],
    '@typescript-eslint/no-unnecessary-type-arguments': ['warn'],
    '@typescript-eslint/no-unnecessary-type-assertion': ['error'],
    '@typescript-eslint/no-unnecessary-type-constraint': ['error'],
    '@typescript-eslint/no-unsafe-argument': ['error'],
    '@typescript-eslint/no-unsafe-assignment': ['off'],
    '@typescript-eslint/no-unsafe-call': ['off'],
    '@typescript-eslint/no-unsafe-declaration-merging': ['error'],
    '@typescript-eslint/no-unsafe-member-access': ['off'],
    '@typescript-eslint/no-unsafe-return': ['off'],
    '@typescript-eslint/no-useless-empty-export': ['warn'],
    '@typescript-eslint/no-var-requires': ['error'],
    '@typescript-eslint/non-nullable-type-assertion-style': ['error'],
    '@typescript-eslint/parameter-properties': ['error'],
    '@typescript-eslint/prefer-as-const': ['error'],
    '@typescript-eslint/prefer-enum-initializers': ['warn'],
    '@typescript-eslint/prefer-for-of': ['error'],
    '@typescript-eslint/prefer-function-type': ['error'],
    '@typescript-eslint/prefer-includes': ['error'],
    '@typescript-eslint/prefer-literal-enum-member': ['error'],
    '@typescript-eslint/prefer-namespace-keyword': ['error'],
    '@typescript-eslint/prefer-nullish-coalescing': ['warn'],
    '@typescript-eslint/prefer-optional-chain': ['warn'],
    '@typescript-eslint/prefer-readonly': ['warn'],
    '@typescript-eslint/prefer-readonly-parameter-types': ['off'],
    '@typescript-eslint/prefer-reduce-type-parameter': ['off'],
    '@typescript-eslint/prefer-regexp-exec': ['error'],
    '@typescript-eslint/prefer-return-this-type': ['error'],
    '@typescript-eslint/prefer-string-starts-ends-with': ['error'],
    '@typescript-eslint/prefer-ts-expect-error': ['error'],
    '@typescript-eslint/promise-function-async': ['error'],
    '@typescript-eslint/require-array-sort-compare': ['error'],
    '@typescript-eslint/restrict-plus-operands': ['error'],
    '@typescript-eslint/restrict-template-expressions': ['off'],
    '@typescript-eslint/sort-type-constituents': ['error'],
    '@typescript-eslint/strict-boolean-expressions': ['off'],
    '@typescript-eslint/switch-exhaustiveness-check': ['error'],
    '@typescript-eslint/triple-slash-reference': ['error'],
    '@typescript-eslint/typedef': ['off'],
    '@typescript-eslint/unbound-method': ['error'],
    '@typescript-eslint/unified-signatures': ['warn'],

    // Style
    // '@stylistic/plus/type-generic-spacing': ['error'],
    // '@stylistic/plus/type-named-tuple-spacing': ['error'],
    // '@stylistic/ts/block-spacing': ['error', 'always'],
    // '@stylistic/ts/brace-style': ['error', '1tbs'],
    // '@stylistic/ts/comma-dangle': ['error', 'always-multiline'],
    // '@stylistic/ts/comma-spacing': ['error'],
    // '@stylistic/ts/function-call-spacing': ['error', 'never'],
    // '@stylistic/ts/indent': ['error', 2],
    // '@stylistic/ts/key-spacing': ['error'],
    // '@stylistic/ts/keyword-spacing': ['error'],
    '@stylistic/ts/lines-around-comment': ['off'],
    // '@stylistic/ts/lines-between-class-members': ['error', 'always'],
    // '@stylistic/ts/member-delimiter-style': ['error', { multiline: { delimiter: 'none', requireLast: false }, singleline: { delimiter: 'semi', requireLast: false } }],
    // '@stylistic/ts/no-extra-parens': ['error'],
    '@stylistic/ts/no-extra-semi': ['off'],
    // '@stylistic/ts/object-curly-spacing': ['error', 'always'],
    '@stylistic/ts/padding-line-between-statements': ['off'],
    // '@stylistic/ts/quote-props': ['error', 'as-needed'],
    // '@stylistic/ts/quotes': ['error', 'single', { avoidEscape: true, allowTemplateLiterals: true }],
    // '@stylistic/ts/semi': ['error', 'never'],
    // '@stylistic/ts/space-before-blocks': ['error', 'always'],
    '@stylistic/ts/space-before-function-paren': ['off'],
    // '@stylistic/ts/space-infix-ops': ['error'],
    // '@stylistic/ts/type-annotation-spacing': ['error'],

    // This turns off the javascript options and enables the typescript options
    // (with the same values).
    ...[
      '@typescript-eslint/default-param-last',
      '@typescript-eslint/dot-notation',
      '@typescript-eslint/init-declarations',
      '@typescript-eslint/no-array-constructor',
      '@typescript-eslint/no-dupe-class-members',
      '@typescript-eslint/no-empty-function',
      '@typescript-eslint/no-extra-semi',
      '@typescript-eslint/no-implied-eval',
      '@typescript-eslint/no-invalid-this',
      '@typescript-eslint/no-loop-func',
      '@typescript-eslint/no-loss-of-precision',
      '@typescript-eslint/no-magic-numbers',
      '@typescript-eslint/no-redeclare',
      '@typescript-eslint/no-restricted-imports',
      '@typescript-eslint/no-shadow',
      '@typescript-eslint/no-throw-literal',
      '@typescript-eslint/no-unused-expressions',
      '@typescript-eslint/no-unused-vars',
      '@typescript-eslint/no-use-before-define',
      '@typescript-eslint/no-useless-constructor',
      '@typescript-eslint/require-await',
      '@typescript-eslint/return-await',
    ].reduce((acc, rule) => {
      const [prefix, name] = rule.split('/')
      const baseValue = javascriptConfiguration.rules[name] || javascriptConfiguration.rules[`no-${name}`]
      // Turn off the base rule
      acc[name] = ['off']
      // Set the value of the extension rule to that of the base rule
      acc[`${prefix}/${name}`] = baseValue
      return acc
    }, {}),
  },
}

const tsxConfiguration = {
  ...jsxConfiguration,
  ...typescriptConfiguration,

  files: ['**/*.tsx'],
  plugins: [...jsxConfiguration.plugins, ...typescriptConfiguration.plugins],

  rules: {
    ...jsxConfiguration.rules,
    ...typescriptConfiguration.rules,
  },

  globals: {
    ...jsxConfiguration.globals,
  },
}

const jsonConfiguration = {
  files: ['**/*.json', '.eslintrc.json'],
  plugins: ['jsonc'],
  extends: ['plugin:jsonc/recommended-with-json'],
}

module.exports = {
  overrides: [javascriptConfiguration, jsxConfiguration, typescriptConfiguration, tsxConfiguration, jsonConfiguration],
}
